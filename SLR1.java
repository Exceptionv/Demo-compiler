//类SLR1与程序Gram_test联合使用完成语法分析

//类SLR1由三个表及其对应的查表程序组成：ACTION,GOTO,Producation
//Action表：数据类型为char型，记录对应当前应该完成的动作。
//R代表规约，S代表移进，E代表出错，A代表语法分析成功

//Goto表：数据类型为int型，
//记录：当Action表中查出为S,则表示想要转入的下一个状态
//      当Action表查出为R时，则表示规约所需产生式的编号
//      99表示对应出错状态

//Production表：数据类型为char,用于记录规约产生式和对应的长度


//import Mypackage.*;
package Mypackage;
import java.util.*;
class SLR1
{
	private char Action1[]=

		{'(',')','+','-','*','/','i',';'};

	private char Action2[][]=
	{
		{'S','E','E','E','E','E','S','E'},
		{'E','E','S','S','E','E','E','A'},
		{'E','R','R','R','S','S','E','R'},
		{'E','R','R','R','R','R','E','R'},
		{'S','E','E','E','E','E','S','E'},
		{'E','R','R','R','R','R','E','R'},
		{'S','E','E','E','E','E','S','E'},
		{'S','E','E','E','E','E','S','E'},
		{'S','E','E','E','E','E','S','E'},
		{'S','E','E','E','E','E','S','E'},
		{'E','S','S','S','E','E','E','E'},
		{'E','R','R','R','S','S','E','R'},
		{'E','R','R','R','S','S','E','R'},
		{'E','R','R','R','R','R','E','R'},
		{'E','R','R','R','R','R','E','R'},
		{'E','R','R','R','R','R','E','R'}
	};
	private char Goto1[]=

		{'(',')','+','-','*','/','i',';','E','T','F'};


	private int Goto2[][]=
	{
		{4,99,99,99,99,99,5,99,1,2,3},
		{99,99,6,7,99,99,99,100,99,99,99},
		{99,3,3,3,8,9,99,3,99,99,99},
		{99,6,6,6,6,6,99,6,99,99,99},
		{4,99,99,99,99,99,5,99,10,2,3},
		{99,8,8,8,8,8,99,8,99,99,99},
		{4,99,99,99,99,99,5,99,99,11,3},
		{4,99,99,99,99,99,5,99,99,12,3},
		{4,99,99,99,99,99,5,99,99,99,13},
		{4,99,99,99,99,99,5,99,99,99,14},
		{99,15,6,7,99,99,99,99,99,99,99},
		{99,1,1,1,8,9,99,1,99,99,99},
		{99,2,2,2,8,9,99,2,99,99,99},
		{99,4,4,4,4,4,99,4,99,99,99},
		{99,5,5,5,5,5,99,5,99,99,99},
		{99,7,7,7,7,7,99,7,99,99,99}
	};
	private char Producation[][]=
	{
		{'E','1'},
		{'E','3'},
		{'E','3'},
		{'E','1'},
		{'T','3'},
		{'T','3'},
		{'T','1'},
		{'F','3'},
		{'F','1'}

	};

	private int row,column;
	private char temp;

//SLR1初始化，tem记录从符号串中当前指向，r记录状态栈中当前状态
	public SLR1(char tem,int r)
	{
		    row=r;
        temp=tem;
	}

	public char SearchA()
	{
		for(int i=0;i<8;i++)
		{
			if(temp==Action1[i])
			{column=i;}
		}
		return Action2[row][column];
	}

	public int SearchG()
	{
		for(int i=0;i<11;i++)
		{

			if(temp==Goto1[i])
			{column=i;}
		}

		return Goto2[row][column];
	}

	public char[] SearchP(int f)
	{
        return Producation[f];
	}

}
